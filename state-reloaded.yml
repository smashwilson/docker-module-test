---

- name: existing container we can link to
  docker: name=linkme state=started image=debian:jessie command='sleep 1d' expose=8000

- name: existing container we can mount a volume from
  docker: name=volumeme state=present image=debian:jessie volumes=["/usr"]

- name: existing running container with all the bells and whistles
  docker:
    name: running
    state: started
    image: debian:jessie
    command: sleep 1d
    expose: ["2000"]
    ports: ["3000", "3001:3002", "127.0.0.1:3002:3003", "3004:3005/tcp", "3006/tcp"]
    volumes: ["/usr:/var/wat", "/etc:/var/huh:ro", "/usr/local"]
    volumes_from: ["volumeme"]
    links: ["linkme"]
    memory_limit: 512MB
    hostname: initialhostname
    domainname: initialdomainname
    env:
      INBOTH: "yes"
      VALUECHANGE: "initialvalue"
      ONLYINITIAL: "yes"
    dns:
    - "8.8.8.8"
    stdin_open: no
    tty: no
    restart_policy: on-failure

- name: reload a container with no effects
  docker:
    name: running
    state: reloaded
    image: debian:jessie
    command: sleep 1d
    expose: ["2000"]
    ports: ["3000", "3001:3002", "127.0.0.1:3002:3003", "3004:3005/tcp", "3006/tcp"]
    volumes: ["/usr:/var/wat", "/etc:/var/huh:ro", "/usr/local"]
    volumes_from: ["volumeme"]
    links: ["linkme"]
    memory_limit: 512MB
    hostname: initialhostname
    domainname: initialdomainname
    env:
      INBOTH: "yes"
      VALUECHANGE: "initialvalue"
      ONLYINITIAL: "yes"
    dns:
    - "8.8.8.8"
    stdin_open: no
    tty: no
    restart_policy: on-failure
  register: reloaded0

- assert: { that: "not (reloaded0 | changed)" }

- name: reload a container with a changed env
  docker:
    name: running
    state: reloaded
    image: debian:jessie
    command: sleep 1d
    expose: ["2000"]
    ports: ["3000", "3001:3002", "127.0.0.1:3002:3003", "3004:3005/tcp", "3006/tcp"]
    volumes: ["/usr:/var/wat", "/etc:/var/huh:ro", "/usr/local"]
    volumes_from: ["volumeme"]
    links: ["linkme"]
    memory_limit: 512MB
    hostname: initialhostname
    domainname: initialdomainname
    env:
      INBOTH: "yes"
      VALUECHANGE: "differentvalue"
      ONLYCHANGED: "yes"
    dns:
    - "8.8.8.8"
    stdin_open: no
    tty: no
    restart_policy: on-failure
  register: reloaded1

- assert:
    that:
    - reloaded1 | changed
    - reloaded1.summary.stopped == 1
    - reloaded1.summary.removed == 1
    - reloaded1.summary.created == 1
    - reloaded1.summary.started == 1
    - reloaded1.reload_reasons == "environment"

- name: basic container
  docker: name=basic state=started image=debian:jessie command='sleep 1d'

- name: no-op reload of basic container
  docker: name=basic state=reloaded image=debian:jessie command='sleep 1d'
  register: reloaded2

- assert: { that: "not reloaded2 | changed" }

- name: reload basic container with new exposed port
  docker: name=basic state=reloaded image=debian:jessie command='sleep 1d' expose=9000
  register: reloaded3

- assert:
    that:
    - reloaded3 | changed
    - reloaded3.summary.stopped == 1
    - reloaded3.summary.removed == 1
    - reloaded3.summary.created == 1
    - reloaded3.summary.started == 1
    - reloaded3.reload_reasons == "exposed_ports (set([]) => set(['9000/tcp']))"

- name: container with exposed ports, volumes, and environment variables
  docker: name=exposed state=started image=testimage command='sleep 1d'

- name: no-op reload of container with exposed things
  docker: name=exposed state=reloaded image=testimage command='sleep 1d'
  register: reloaded4

- debug: var=reloaded4

- assert: { that: "not reloaded4 | changed" }

- name: reload of container with exposed things to add an environment variable
  docker:
    name: exposed
    state: reloaded
    image: testimage
    command: sleep 1d
    env:
      NEWVAR: newvalue
  register: reloaded5

- debug: var=reloaded5

- assert: { that: "reloaded5 | changed" }
